---
include:
 - 209A_Page_1.yml
 #- 209A_page_2.yml # This one is obsolete
 - 209A-child-support.yml
 - plaintiff-confidential.yml
 - defendant-information-209A.yml
 - 209A_affidavit.yml
 - 209A_affidavit_disclosing_care_or_custody_proceedings.yml
 - 209A_complaint_for_protection_from_abuse_probation.yml
 - motion-for-impoundment.yml
 #- escape.yml
---
features:
  navigation: True
---
sections:
  - section_intro: Introduction
  - section_basic: Basic information
  - section_relationship: Your relationship
  - section_affidavit: Your statement
  - section_children: Children  
  - section_other_cases: Other cases
  - section_custody: Custody
  - section_child_support: Child Support
  - section_defendant_info: Other party information
  - section_your_info: Your information
  - section_privacy: Keeping your information private
---
code: |
  attachment_temp = []  
  # Build the 209A package. Up to 8 total forms
  # Page 1: complaint_209A_labeled_page10003_attachment
  # Complaint Affidavit: complaint_209A_Affidavit_attachment
  # Page 2: A_complaint_for_protection_from_abuse_probation_copy0005_attachment
  # Child support: Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008_attachment
  # Affidavit care/custody: A_affidavit_disclosing_care_or_custody_proceedings0009_attachment 
  # Plaintiff info: A_Plaintiff_Confidential_Information0011_attachment
  # Defendant info: defendantinformation209A0008_attachment
  # motion to impound: a_258e_motion_for_impoundment0019_attachment
  
  # Always include page 1 
  attachment_temp.append(complaint_209A_labeled_page10003_attachment)
  attachment_temp.append( complaint_209A_Affidavit_attachment )  
  # include page 2 only if there are children
  if plaintiff_has_minor_children: 
    attachment_temp.append( A_complaint_for_protection_from_abuse_probation_copy0005_attachment )
    attachment_temp.append(A_affidavit_disclosing_care_or_custody_proceedings0009_attachment)
    
  if wants_child_support_yes and not existing_order:
    attachment_temp.append( Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008_attachment)
  attachment_temp.append(A_Plaintiff_Confidential_Information0011_attachment)
  attachment_temp.append(defendantinformation209A0008_attachment)
  attachment_temp.append(a_258e_motion_for_impoundment0019_attachment)
  
  final_attachment_bundle = attachment_temp
---
mandatory: True
code: |
  set_interview_defaults # Set some things that are true on any 209A
  
  ##################### Intro screen
  basic_questions_intro_screen
  main_209A_package_intro
  who_protecting_screener # We don't use this yet?  
  users[0].name.first
  if who_protecting_screener == "someone else":
    plaintiff_assistant_relationship_to_plaintiff  
    tell_user_about_first_person_questions
  plaintiff_is_major_yes # Ask for age
  other_parties[0].name.first

  ########################## Page 1
  defendant_and_plaintiff_are_parents_of_child
  relationship_to_defendant_unmarried
  
  complaint_209A_labeled_page10003 # Page 1

  ############################ Affidavit
  nav.set_section('section_affidavit')
  complaint_209A_Affidavit # Main affidavit
  # From page 1
  abuse_suffered_date # Filled in with code, I think
  if plaintiff_has_minor_children:
    A_complaint_for_protection_from_abuse_probation_copy0005 # Page 2
  if no_abuse_checked:
    refer_to_258E_resources # Maybe this info is wrong

  ############################ Relief
  # From page 1
  order_defendant_stop_abuse_yes # make sure this gets defined, but it will always be True via a code block
  if not order_defendant_remain_away_plaintiff_residence_yes:
    If_this_is_an_apartment_building_or_other_multiple_family_dwelling_check_here = DAEmpty()
  if not order_defendant_pay_yes:
    losses_caused_by_defendant = DAEmpty()
    order_defendant_pay_amount = DAEmpty()

  order_impound_plaintiff_address_residential_yes
  if not order_other_relief_yes: # triggers asking about relief
    other_relief = DAEmpty()

  order_relief_ex_parte

  ####################### Child support
  nav.set_section('section_child_support')
  if wants_child_support_yes:
    if not existing_order:
      Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008   # Child support

  # Care or custody proceedings
  A_affidavit_disclosing_care_or_custody_proceedings0009 # Aff. care or custody
  # From page 1
  other_cases.gather()

  ############################## Defendant info
  # From page 1
  # This is redundant to defendant information question
  defendant_has_alias # redundant to def. information section
  if not defendant_weapons_guns: # This needs to get moved. It appears in a jarring place right now.
    defendant_weapons_description = DAEmpty()

  defendantinformation209A0008

  ########################## Plaintiff info
  A_Plaintiff_Confidential_Information0011
  a_258e_motion_for_impoundment0019

  # Set unfilled fields empty, if needed
  mark_unfilled_fields_empty(interview_metadata["complaint_209A_Affidavit"])
  mark_unfilled_fields_empty(interview_metadata["Plaintiff_Affidavit_in_support_of_request_for_child_support_order0008"])
  mark_unfilled_fields_empty( interview_metadata["A_Plaintiff_Confidential_Information0011"])

  final_attachment_bundle
  download_screen
---
if: |
  who_protecting_screener == "someone else"
question: |
  What is the name of the person who needs the order?
fields:
  - First Name: users[0].name.first
  - Middle Name: users[0].name.middle
    required: False
  - Last Name: users[0].name.last
  - Suffix: users[0].name.suffix
    code: |
      name_suffix()
    required: False  
---
question: |
  You are helping ${users.familiar()} fill out this form
subquestion: |
  
  **Instruction to ${plaintiff_assistant_name}**:

  Because you are helping ${users.familiar()}, answer the 
  rest of the questions
  on this form as though you are ${users.familiar()}. If you are with
  ${users.familiar()}, help them put the answers into their own words.
field: tell_user_about_first_person_questions  
---
question: |
  Download screen
subquestion: |
  ${pdf_concatenate(final_attachment_bundle)}
event: download_screen  

---
comment: |
  Build some variables dynamically
---
code: |
  # There are never 2 defendants or two plaintiffs
  users.there_is_another = False
  other_parties.there_is_another = False
  defendant = other_parties # We need this for Affidavit interview currently
  confidential_address = True

  set_interview_defaults = True
---
code: |
  # Set no_abuse_checked via the 209A Affidavit questions
  # Here we set them to the Page1 variables
  for incident in incidents_of_abuse:
    if 'fear' in incident.abuse:
      defendant_abuse_caused_fear_of_serious_physical_harm = True
    if 'attempted-physical' in incident.abuse:
      defendant_abuse_attempted_physical_harm = True
    if 'physical' in incident.abuse:
      defendant_abuse_caused_physical_harm = True
    if 'sex' in incident.abuse:
      defendant_abuse_caused_sexual_assault = True

  defendant_abuse_caused_fear_of_serious_physical_harm = defined('defendant_abuse_caused_fear_of_serious_physical_harm')
  defendant_abuse_attempted_physical_harm = defined('defendant_abuse_attempted_physical_harm')
  defendant_abuse_caused_physical_harm = defined('defendant_abuse_caused_physical_harm')
  defendant_abuse_caused_sexual_assault = defined('defendant_abuse_caused_sexual_assault')

  no_abuse_checked = (not defendant_abuse_caused_fear_of_serious_physical_harm 
    and not defendant_abuse_attempted_physical_harm
    and not defendant_abuse_caused_physical_harm
    and not defendant_abuse_caused_sexual_assault)
---
code: |
  # Refer to the first incident of abuse from the 209A affidavit question
  abuse_suffered_date = incidents_of_abuse[0].date

